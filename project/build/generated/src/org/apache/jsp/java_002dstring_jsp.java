package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class java_002dstring_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.ArrayList<String>(1);
    _jspx_dependants.add("/signinheader.jsp");
  }

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>String</title>\n");
      out.write("        <style>\n");
      out.write("        .java {\n");
      out.write("            font-size: 20px;\n");
      out.write("            float: left;\n");
      out.write("        } \n");
      out.write("        .java ul li a{\n");
      out.write("            text-decoration: none;\n");
      out.write("            color:red;\n");
      out.write("        }\n");
      out.write("        .study{\n");
      out.write("            \n");
      out.write("            margin-left: 300px;\n");
      out.write("            background-color: wheat;\n");
      out.write("        }\n");
      out.write("        .study p{\n");
      out.write("            margin-left: 20px;\n");
      out.write("            margin-top:  20px;\n");
      out.write("            font-size: 20px;\n");
      out.write("        }\n");
      out.write("        .study h1{\n");
      out.write("            margin-left: 20px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("    </head>\n");
      out.write("    <body style=\"background-image: url(images/2.jpg);background-size: cover\">\n");
      out.write("         ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Header</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"signinheader.css\"/>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"signin\">\n");
      out.write("            \n");
      out.write("                <button class=\"button\"><a href=\"useracount.jsp\">Home</a></button>\n");
      out.write("                <button class=\"button\"><a href=\"course.jsp\">Courses</a></button>\n");
      out.write("               <button> <a href=\"logout.jsp\">Logout</a></button>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("<br/><br/><br/>\n");
      out.write("        <div class=\"java\">\n");
      out.write("<ul class=\"nav nav-list primary left-menu\" >\n");
      out.write("<li class=\"heading\">Java Tutorial</li>\n");
      out.write("<li><a href=\"Core Java.jsp\">Java - Home</a></li>\n");
      out.write("<li><a href=\"java-overview.jsp\">Java - Overview</a></li>\n");
      out.write("<li><a href=\"java-environment.jsp\">Java - Environment Setup</a></li>\n");
      out.write("<li><a href=\"java-basic-syntax.jsp\">Java - Basic Syntax</a></li>\n");
      out.write("<li><a href=\"/java/java_object_classes.htm\">Java - Object &amp; Classes</a></li>\n");
      out.write("<li><a href=\"/java/java_basic_datatypes.htm\">Java - Basic Datatypes</a></li>\n");
      out.write("<li><a href=\"/java/java_variable_types.htm\">Java - Variable Types</a></li>\n");
      out.write("<li><a href=\"/java/java_modifier_types.htm\">Java - Modifier Types</a></li>\n");
      out.write("<li><a href=\"/java/java_basic_operators.htm\">Java - Basic Operators</a></li>\n");
      out.write("<li><a href=\"/java/java_loop_control.htm\">Java - Loop Control</a></li>\n");
      out.write("<li><a href=\"/java/java_decision_making.htm\">Java - Decision Making</a></li>\n");
      out.write("<li><a href=\"/java/java_numbers.htm\">Java - Numbers</a></li>\n");
      out.write("<li><a href=\"/java/java_characters.htm\">Java - Characters</a></li>\n");
      out.write("<li><a href=\"/java/java_strings.htm\">Java - Strings</a></li>\n");
      out.write("<li><a href=\"/java/java_arrays.htm\">Java - Arrays</a></li>\n");
      out.write("<li><a href=\"/java/java_date_time.htm\">Java - Date &amp; Time</a></li>\n");
      out.write("<li><a href=\"/java/java_regular_expressions.htm\">Java - Regular Expressions</a></li>\n");
      out.write("<li><a href=\"/java/java_methods.htm\">Java - Methods</a></li>\n");
      out.write("<li><a href=\"/java/java_files_io.htm\">Java - Files and I/O</a></li>\n");
      out.write("<li><a href=\"/java/java_exceptions.htm\">Java - Exceptions</a></li>\n");
      out.write("<li><a href=\"/java/java_innerclasses.htm\">Java - Inner classes</a></li>\n");
      out.write("</ul>\n");
      out.write("\n");
      out.write("</aside>\n");
      out.write("</div>\n");
      out.write("        <div class=\"study\"> \n");
      out.write("    <p>Strings, which are widely used in Java programming, are a sequence of characters. In Java programming language, strings are treated as objects.</p>\n");
      out.write("<p>The Java platform provides the String class to create and manipulate strings.</p>\n");
      out.write("<h2>Creating Strings</h2>\n");
      out.write("<p>The most direct way to create a string is to write &minus;</p>\n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("String greeting = \"Hello world!\";\n");
      out.write("</pre>\n");
      out.write("<p>Whenever it encounters a string literal in your code, the compiler creates a String object with its value in this case, \"Hello world!'.</p>\n");
      out.write("<p>As with any other object, you can create String objects by using the new keyword and a constructor. The String class has 11 constructors that allow you to provide the initial value of the string using different sources, such as an array of characters.</p>\n");
      out.write("<h3>Example</h3>\n");
      out.write("<pre class=\"prettyprint notranslate tryit\">\n");
      out.write("public class StringDemo {\n");
      out.write("\n");
      out.write("   public static void main(String args[]) {\n");
      out.write("      char[] helloArray = { 'h', 'e', 'l', 'l', 'o', '.' };\n");
      out.write("      String helloString = new String(helloArray);  \n");
      out.write("      System.out.println( helloString );\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("</pre>\n");
      out.write("<p>This will produce the following result &minus;</p>\n");
      out.write("<h3>Output</h3> \n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("hello.\n");
      out.write("</pre>\n");
      out.write("<p><b>Note</b> &minus; The String class is immutable, so that once it is created a String object cannot be changed. If there is a necessity to make a lot of modifications to Strings of characters, then you should use <a href=\"/java/java_string_buffer.htm\">String Buffer &amp; String Builder</a> Classes.</p>\n");
      out.write("<h2>String Length</h2>\n");
      out.write("<p>Methods used to obtain information about an object are known as <b>accessor methods</b>. One accessor method that you can use with strings is the length() method, which returns the number of characters contained in the string object.</p>\n");
      out.write("<p>The following program is an example of <b>length()</b>, method String class.</p>\n");
      out.write("<h3>Example</h3>\n");
      out.write("<pre class=\"prettyprint notranslate tryit\">\n");
      out.write("public class StringDemo {\n");
      out.write("\n");
      out.write("   public static void main(String args[]) {\n");
      out.write("      String palindrome = \"Dot saw I was Tod\";\n");
      out.write("      int len = palindrome.length();\n");
      out.write("      System.out.println( \"String Length is : \" + len );\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("</pre>\n");
      out.write("<p>This will produce the following result &minus;</p>\n");
      out.write("<h3>Output</h3> \n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("String Length is : 17\n");
      out.write("</pre>\n");
      out.write("<h2>Concatenating Strings</h2>\n");
      out.write("<p>The String class includes a method for concatenating two strings &minus;</p>\n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("string1.concat(string2);\n");
      out.write("</pre>\n");
      out.write("<p>This returns a new string that is string1 with string2 added to it at the end. You can also use the concat() method with string literals, as in &minus;</p>\n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("\"My name is \".concat(\"Zara\");\n");
      out.write("</pre>\n");
      out.write("<p>Strings are more commonly concatenated with the &plus; operator, as in &minus;</p>\n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("\"Hello,\" + \" world\" + \"!\"\n");
      out.write("</pre>\n");
      out.write("<p>which results in &minus;</p>\n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("\"Hello, world!\"\n");
      out.write("</pre>\n");
      out.write("<p>Let us look at the following example &minus;</p>\n");
      out.write("<h3>Example</h3>\n");
      out.write("<pre class=\"prettyprint notranslate tryit\">\n");
      out.write("public class StringDemo {\n");
      out.write("\n");
      out.write("   public static void main(String args[]) {\n");
      out.write("      String string1 = \"saw I was \";\n");
      out.write("      System.out.println(\"Dot \" + string1 + \"Tod\");\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("</pre>\n");
      out.write("<p>This will produce the following result &minus;</p>\n");
      out.write("<h3>Output</h3>\n");
      out.write("<pre class=\"result notranslate\">\n");
      out.write("Dot saw I was Tod\n");
      out.write("</pre>\n");
      out.write("<h2>Creating Format Strings</h2>\n");
      out.write("<p>You have printf() and format() methods to print output with formatted numbers. The String class has an equivalent class method, format(), that returns a String object rather than a PrintStream object.</p>\n");
      out.write("<p>Using String's static format() method allows you to create a formatted string that you can reuse, as opposed to a one-time print statement. For example, instead of &minus;</p>\n");
      out.write("<h3>Example</h3>\n");
      out.write("<pre class=\"prettyprint notranslate\">\n");
      out.write("System.out.printf(\"The value of the float variable is \" +\n");
      out.write("                  \"%f, while the value of the integer \" +\n");
      out.write("                  \"variable is %d, and the string \" +\n");
      out.write("                  \"is %s\", floatVar, intVar, stringVar);\n");
      out.write("</pre>\n");
      out.write("<p>You can write &minus;</p>\n");
      out.write("<pre class=\"prettyprint notranslate\">\n");
      out.write("String fs;\n");
      out.write("fs = String.format(\"The value of the float variable is \" +\n");
      out.write("                   \"%f, while the value of the integer \" +\n");
      out.write("                   \"variable is %d, and the string \" +\n");
      out.write("                   \"is %s\", floatVar, intVar, stringVar);\n");
      out.write("System.out.println(fs);\n");
      out.write("</pre>\n");
      out.write("<h2>String Methods</h2>\n");
      out.write("<p>Here is the list of methods supported by String class &minus;</p>\n");
      out.write("<table class=\"table table-bordered\">\n");
      out.write("<tr>\n");
      out.write("<th>Sr.No.</th>\n");
      out.write("<th style=\"text-align:center;\">Method &amp; Description</th>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">1</td>\n");
      out.write("<td><a href=\"/java/java_string_charat.htm\">char  charAt(int index)</a>\n");
      out.write("<p>Returns the character at the specified index.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">2</td>\n");
      out.write("<td><a href=\"/java/java_string_compareto.htm\">int compareTo(Object o)</a>\n");
      out.write("<p>Compares this String to another Object.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">3</td>\n");
      out.write("<td><a href=\"/java/java_string_compareto_anotherstring.htm\">int compareTo(String anotherString)</a>\n");
      out.write("<p>Compares two strings lexicographically.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">4</td>\n");
      out.write("<td><a href=\"/java/java_string_comparetoignorecase.htm\">int compareToIgnoreCase(String str)</a> \n");
      out.write("<p>Compares two strings lexicographically, ignoring case differences.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">5</td>\n");
      out.write("<td><a href=\"/java/java_string_concat.htm\">String concat(String str)</a>\n");
      out.write("<p>Concatenates the specified string to the end of this string.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">6</td>\n");
      out.write("<td><a href=\"/java/java_string_contentequals.htm\">boolean contentEquals(StringBuffer sb)</a>\n");
      out.write("<p>Returns true if and only if this String represents the same sequence of characters as the specified StringBuffer.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">7</td>\n");
      out.write("<td><a href=\"/java/java_string_copyvalueof.htm\">static String copyValueOf(char[] data)</a>\n");
      out.write("<p>Returns a String that represents the character sequence in the array specified.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">8</td>\n");
      out.write("<td><a href=\"/java/java_string_copyvalueof_dataoffsetcount.htm\">static String copyValueOf(char[] data, int offset, int count)</a>\n");
      out.write("<p>Returns a String that represents the character sequence in the array specified.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">9</td>\n");
      out.write("<td><a href=\"/java/java_string_endswith.htm\">boolean endsWith(String suffix)</a> \n");
      out.write("<p>Tests if this string ends with the specified suffix.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">10</td>\n");
      out.write("<td><a href=\"/java/java_string_equals.htm\">boolean equals(Object anObject)</a>\n");
      out.write("<p>Compares this string to the specified object.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">11</td>\n");
      out.write("<td><a href=\"/java/java_string_equalsignorecase.htm\">boolean equalsIgnoreCase(String anotherString)</a>\n");
      out.write("<p>Compares this String to another String, ignoring case considerations.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">12</td>\n");
      out.write("<td><a href=\"/java/java_string_getbytes.htm\">byte getBytes()</a> \n");
      out.write("<p>Encodes this String into a sequence of bytes using the platform's default charset, storing the result into a new byte array.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">13</td>\n");
      out.write("<td><a href=\"/java/java_string_getbytes_charsetname.htm\">byte[] getBytes(String charsetName)</a>\n");
      out.write("<p>Encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">14</td>\n");
      out.write("<td><a href=\"/java/java_string_getchars.htm\">void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)</a>\n");
      out.write("<p>Copies characters from this string into the destination character array.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">15</td>\n");
      out.write("<td><a href=\"/java/java_string_hashcode.htm\">int hashCode()</a>\n");
      out.write("<p>Returns a hash code for this string.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">16</td>\n");
      out.write("<td><a href=\"/java/java_string_indexof.htm\">int indexOf(int ch)</a>\n");
      out.write("<p>Returns the index within this string of the first occurrence of the specified character.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">17</td>\n");
      out.write("<td><a href=\"/java/java_string_indexof_fromindex.htm\">int indexOf(int ch, int fromIndex)</a> \n");
      out.write("<p>Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">18</td>\n");
      out.write("<td><a href=\"/java/java_string_indexof_str.htm\">int indexOf(String str)</a>\n");
      out.write("<p>Returns the index within this string of the first occurrence of the specified substring.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">19</td>\n");
      out.write("<td><a href=\"/java/java_string_indexof_strfromindex.htm\">int indexOf(String str, int fromIndex)</a>\n");
      out.write("<p>Returns the index within this string of the first occurrence of the specified substring, starting at the specified index.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">20</td>\n");
      out.write("<td><a href=\"/java/java_string_intern.htm\">String intern()</a>\n");
      out.write("<p>Returns a canonical representation for the string object.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">21</td>\n");
      out.write("<td><a href=\"/java/java_string_lastindexof.htm\">int lastIndexOf(int ch)</a>\n");
      out.write("<p>Returns the index within this string of the last occurrence of the specified character.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">22</td>\n");
      out.write("<td><a href=\"/java/java_string_lastindexof_chfromindex.htm\">int lastIndexOf(int ch, int fromIndex)</a>\n");
      out.write("<p>Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">23</td>\n");
      out.write("<td><a href=\"/java/java_string_lastindexof_str.htm\">int lastIndexOf(String str)</a>\n");
      out.write("<p>Returns the index within this string of the rightmost occurrence of the specified substring.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">24</td>\n");
      out.write("<td><a href=\"/java/java_string_lastindexof_fromindex.htm\">int lastIndexOf(String str, int fromIndex)</a> \n");
      out.write("<p>Returns the index within this string of the last occurrence of the specified substring, searching backward starting at the specified index.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">25</td>\n");
      out.write("<td><a href=\"/java/java_string_length.htm\">int length()</a>\n");
      out.write("<p>Returns the length of this string.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">26</td>\n");
      out.write("<td><a href=\"/java/java_string_matches.htm\">boolean matches(String regex)</a>\n");
      out.write("<p>Tells whether or not this string matches the given regular expression.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">27</td>\n");
      out.write("<td><a href=\"/java/java_string_regionmatches_ignorecase.htm\">boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len) </a>\n");
      out.write("<p>Tests if two string regions are equal.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">28</td>\n");
      out.write("<td><a href=\"/java/java_string_regionmatches.htm\">boolean regionMatches(int toffset, String other, int ooffset, int len)</a>\n");
      out.write("<p>Tests if two string regions are equal.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">29</td>\n");
      out.write("<td><a href=\"/java/java_string_replace.htm\">String replace(char oldChar, char newChar)</a>\n");
      out.write("<p>Returns a new string resulting from replacing all occurrences of oldChar in this string with newChar.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">30</td>\n");
      out.write("<td><a href=\"/java/java_string_replaceall.htm\">String replaceAll(String regex, String replacement</a>\n");
      out.write("<p>Replaces each substring of this string that matches the given regular expression with the given replacement.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">31</td>\n");
      out.write("<td><a href=\"/java/java_string_replacefirst.htm\">String replaceFirst(String regex, String replacement)</a> \n");
      out.write("<p>Replaces the first substring of this string that matches the given regular expression with the given replacement.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">32</td>\n");
      out.write("<td><a href=\"/java/java_string_split.htm\">String[] split(String regex)</a>\n");
      out.write("<p>Splits this string around matches of the given regular expression.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">33</td>\n");
      out.write("<td><a href=\"/java/java_string_split_regexlimit.htm\">String[] split(String regex, int limit)</a>\n");
      out.write("<p>Splits this string around matches of the given regular expression.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">34</td>\n");
      out.write("<td><a href=\"/java/java_string_startswith.htm\">boolean startsWith(String prefix)</a>\n");
      out.write("<p>Tests if this string starts with the specified prefix.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">35</td>\n");
      out.write("<td><a href=\"/java/java_string_startswith_prefixtoffset.htm\">boolean startsWith(String prefix, int toffset)</a>\n");
      out.write("<p>Tests if this string starts with the specified prefix beginning a specified index.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">36</td>\n");
      out.write("<td><a href=\"/java/java_string_subsequence.htm\">CharSequence subSequence(int beginIndex, int endIndex)</a>\n");
      out.write("<p>Returns a new character sequence that is a subsequence of this sequence.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">37</td>\n");
      out.write("<td><a href=\"/java/java_string_substring.htm\">String substring(int beginIndex)</a>\n");
      out.write("<p>Returns a new string that is a substring of this string.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">38</td>\n");
      out.write("<td><a href=\"/java/java_string_substring_beginendindex.htm\">String substring(int beginIndex, int endIndex)</a>\n");
      out.write("<p>Returns a new string that is a substring of this string.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">39</td>\n");
      out.write("<td><a href=\"/java/java_string_tochararray.htm\">char[] toCharArray()</a> \n");
      out.write("<p>Converts this string to a new character array.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">40</td>\n");
      out.write("<td><a href=\"/java/java_string_tolowercase.htm\">String toLowerCase()</a>\n");
      out.write("<p>Converts all of the characters in this String to lower case using the rules of the default locale.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">41</td>\n");
      out.write("<td><a href=\"/java/java_string_tolowercase_locale.htm\">String toLowerCase(Locale locale)</a>\n");
      out.write("<p>Converts all of the characters in this String to lower case using the rules of the given Locale.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">42</td>\n");
      out.write("<td><a href=\"/java/java_string_tostring.htm\">String toString()</a>\n");
      out.write("<p>This object (which is already a string!) is itself returned.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">43</td>\n");
      out.write("<td><a href=\"/java/java_string_touppercase.htm\">String toUpperCase()</a> \n");
      out.write("<p>Converts all of the characters in this String to upper case using the rules of the default locale.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">44</td>\n");
      out.write("<td><a href=\"/java/java_string_touppercase_locale.htm\">String toUpperCase(Locale locale)</a> \n");
      out.write("<p>Converts all of the characters in this String to upper case using the rules of the given Locale.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">45</td>\n");
      out.write("<td><a href=\"/java/java_string_trim.htm\">String trim()</a> \n");
      out.write("<p>Returns a copy of the string, with leading and trailing whitespace omitted.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("<tr>\n");
      out.write("<td style=\"text-align:center; vertical-align:middle;\">46</td>\n");
      out.write("<td><a href=\"/java/java_string_valueof.htm\">static String valueOf(primitive data type x)</a>\n");
      out.write("<p>Returns the string representation of the passed data type argument.</p>\n");
      out.write("</td>\n");
      out.write("</tr>\n");
      out.write("</table>\n");
      out.write("<hr />\n");
      out.write("\n");
      out.write("<p>For a complete list of methods, please refer to the java.lang.Character API specification.</p>\n");
      out.write("<div class=\"pre-btn\">\n");
      out.write("<a href=\"java-basic-syntax.jsp\"><i class=\"icon icon-arrow-circle-o-left big-font\"></i> Previous Page</a>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"nxt-btn\">\n");
      out.write("<a href=\"/java/java_environment_setup.htm\">Next Page <i class=\"icon icon-arrow-circle-o-right big-font\"></i>&nbsp;</a>\n");
      out.write("</div>\n");
      out.write("<hr />\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
